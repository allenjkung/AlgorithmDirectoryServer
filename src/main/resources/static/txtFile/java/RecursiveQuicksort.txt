import java.util.Random;

public class RecursiveQuicksort {
    private static Random random = new Random();

    public static int RecursivePartition(int[] arr, int leftIndex, int rightIndex) {
        int pivotIndex = (random.nextInt(rightIndex - leftIndex) + leftIndex);
        int pivot = arr[pivotIndex];

        int i = leftIndex;
        int j = rightIndex;
        while(true) {
            while(arr[i] < pivot) {
                i += 1;
            }
            while(arr[j] > pivot) {
                j -= 1;
            }
            if(i >= j) {
                return j;
            }
            int tempVal = arr[i];
            arr[i] = arr[j];
            arr[j] = tempVal;
        }
    }

    public static void RecursivePerformQuicksort(int[] arr, int leftIndex, int rightIndex) {
        if(leftIndex >= rightIndex) {
            return;
        }
        int pivotIndex = RecursivePartition(arr, leftIndex, rightIndex);
        RecursivePerformQuicksort(arr, leftIndex, (pivotIndex - 1));
        RecursivePerformQuicksort(arr, (pivotIndex + 1), rightIndex);
    }

    public static void RecursiveQuicksort(int[] arr) {
        int arrLength = arr.length;
        RecursivePerformQuicksort(arr, 0, (arrLength - 1));
    }
}