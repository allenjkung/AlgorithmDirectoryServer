function IterativeSiftDown(&$arr, $root, $lastIndex) {
    $currentIndex = $root;

    while(true) {
        $leftIndex = (($currentIndex * 2) + 1);
        $rightIndex = (($currentIndex * 2) + 2);
        $largestIndex = $currentIndex;

        if($leftIndex < $lastIndex && $arr[$leftIndex] > $arr[$largestIndex]) {
            $largestIndex = $leftIndex;
        }
        if($rightIndex < $lastIndex && $arr[$rightIndex] > $arr[$largestIndex]) {
            $largestIndex = $rightIndex;
        }

        if($largestIndex == $currentIndex) {
            break;
        }

        $tempVal = $arr[$currentIndex];
        $arr[$currentIndex] = $arr[$largestIndex];
        $arr[$largestIndex] = $tempVal;
        $currentIndex = $largestIndex;
    }
}

function IterativeHeapsort(&$arr) {
    $arrLength = count($arr);

    for ($i = ((int)($arrLength / 2) - 1); $i >= 0; $i -= 1) {
        IterativeSiftDown($arr, $i, $arrLength);
    }

    for($i = ($arrLength - 1); $i >= 0; $i -= 1) {
        $temp = $arr[0];
        $arr[0] = $arr[$i];
        $arr[$i] = $temp;

        IterativeSiftDown($arr, 0, $i);
    }
}